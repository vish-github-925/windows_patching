---
  - name: Check CPU utilization
    win_shell: wmic cpu get loadpercentage | Select -Last 4 # The output will be a number. Example: 16
    register: cpu_utilization

  - name: Check disk space
    win_shell: Get-WmiObject Win32_LogicalDisk -Filter "DeviceID='C:'" | Select -ExpandProperty Freespace
    register: disk_space #The output will be a large number. Example 60388986880

  - name: List of running services
    win_shell: Get-Process | select-object ProcessName #The output will be a list of processess running
    register: process

  - set_fact:
     process_list_count: "{{process.stdout_lines | map('trim') | list | unique | count}}"
  
  - debug:
          msg: "The list of processes:  {{ process.stdout_lines | map('trim') | list | unique }} and the count of processes is: {{process_list_count }}"

  - debug:
          msg: "CPU Utilization: {{ cpu_utilization.stdout_lines[0] | int }}"

  - set_fact:
      disk_free_space: "{{ disk_space.stdout_lines[0] | int/1024/1024/1024 }}"

  - debug:
          msg: "The disk free space is: {{ disk_free_space }}"

  - name: Check if Patches are available or Not
    win_updates:
         category_names: SecurityUpdates
         state: searched
         log_path: C:\Temp\{{inventory_hostname}}_{{date_time}}_win_updates_list_output.txt

  - name: Fetch windows update file into the loalhost
    fetch:
     src: C:\Temp\{{inventory_hostname}}_{{date_time}}_win_updates_list_output.txt
     dest: /ansible_dir/win_updates_files/{{date_time}}/
     flat: yes 

  - name: Python script to extract available patches
    shell: python3.8 /ansible_dir/playbooks/win-updates.py /ansible_dir/win_updates_files/{{date_time}}/{{inventory_hostname}}_{{date_time}}_win_updates_list_output.txt
    register: available_patches
    delegate_to: localhost

  - set_fact:
      available_patches_count: "{{available_patches.stdout_lines | list | count }}"

  - set_fact:
      available_patches_list: "{{available_patches.stdout_lines | list }}"

  - debug:
      msg: "{{available_patches.stdout_lines}}"

  - name: check pre-patch log file exists
    stat:
     path: "/ansible_dir/pre_patch_output_files/{{date_time}}_pre_patch.txt"
    run_once: true
    register: pre_patch_log
    delegate_to: localhost

  - debug:
     msg: "{{pre_patch_log}}"

  - name: Create pre-patch log file if doesn't exist
    file:
     path: "/ansible_dir/pre_patch_output_files/{{date_time}}_pre_patch.txt"
     state: touch
    become: yes
    run_once: true
    when: pre_patch_log.stat.exists == false
    delegate_to: localhost

  - name: lineinfile module
    lineinfile:
            line: "Hostname: {{inventory_hostname}},CPU Utilization: {{cpu_utilization.stdout_lines[0] | int }}% ,Disk free space: {{disk_free_space}}, Count of  processess: {{process_list_count }}, Number of patches available: {{available_patches_count}}, List of available patches: {{available_patches_list}}"
            dest: /ansible_dir/pre_patch_output_files/{{date_time}}_pre_patch.txt
            insertbefore: EOF 
    delegate_to: localhost
